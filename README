INTRODUCTION
------------
The goal of this homework is to implement  a resource management module for our Operating System Simulator oss with the use of the deadlock detection. 

COMPILATION
-----------
To compile, open a new CLI window, change the 
directory nesting your module. Type:

  make
  
To remove object files,type:
  make clean
  
EXECUTION
---------

To run it simply type: ./oss

Options
  -h Help option: displays options and their usage for oss.c.
Usage: ./oss -h
  -v Verbose option: this option affects what information is saved in the log file.
Usage: ./oss -v

The output log file is log.txt

Description:
We use bitmap for storing available process blocks, and shareable resources.
  

For synchronization we use 1 + N semaphores, where N is the number of maximum running processes.
first semapore is for the shared region, rest are process semaphores, where each process, waits
for the result of his request.

Deadlock detection is done, before we start processing requests from users.
If there is a deadlock, we try to kill first deadlocked process, then repeat the deadlock check.

User processes generate up to 10 requests, then they quit, releasing everything on exit.
This can be changed on line 99 in user.c

Version Control
----------------------
For Version Control i have used github.
/classes/OS/merugu/merugu.5/git_log.txt

git log has been placed in git_log.txt file 
